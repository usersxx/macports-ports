--- src/java.base/unix/native/libnio/ch/DatagramChannelImpl.c
+++ src/java.base/unix/native/libnio/ch/DatagramChannelImpl.c
@@ -89,29 +89,21 @@ Java_sun_nio_ch_DatagramChannelImpl_disconnect0(JNIEnv *env, jobject this,
 
 #if defined(__solaris__)
     rv = connect(fd, 0, 0);
-#elif defined(__APPLE__)
-    // On macOS systems we use disconnectx
-    rv = disconnectx(fd, SAE_ASSOCID_ANY, SAE_CONNID_ANY);
 #else
     SOCKETADDRESS sa;
+    socklen_t len = isIPv6 ? sizeof(struct sockaddr_in6) :
+                             sizeof(struct sockaddr_in);
     memset(&sa, 0, sizeof(sa));
 #if defined(_ALLBSD_SOURCE)
     sa.sa.sa_family = isIPv6 ? AF_INET6 : AF_INET;
 #else
     sa.sa.sa_family = AF_UNSPEC;
 #endif
-    socklen_t len = isIPv6 ? sizeof(struct sockaddr_in6) :
-                             sizeof(struct sockaddr_in);
 
     rv = connect(fd, &sa.sa, len);
 #endif
 
-#if defined(_ALLBSD_SOURCE) && !defined(__APPLE__)
-    // On _ALLBSD_SOURCE except __APPLE__ we consider EADDRNOTAVAIL
-    // error to be OK and ignore it. __APPLE__ systems are excluded
-    // in this check since for __APPLE__ systems, unlike other BSD systems,
-    // we issue a "disconnectx" call (a few lines above),
-    // which isn't expected to return this error code.
+#if defined(_ALLBSD_SOURCE)
     if (rv < 0 && errno == EADDRNOTAVAIL)
         rv = errno = 0;
 #elif defined(_AIX)
