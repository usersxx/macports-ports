# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0

name                openjdk9-bootstrap
version             9
set build 181
revision            0
categories          java devel
supported_archs     x86_64
license             GPL-2+
maintainers         nomaintainer
description         OpenJDK 9 Boot JDK
long_description    OpenJDK 9 Boot JDK to bootstrap Openjdk ports.
homepage            https://openjdk.org/
master_sites        https://github.com/openjdk/jdk9/archive/refs/tags
distname            jdk-${version}+${build}
worksrcdir          jdk9-jdk-${version}-${build}

checksums           rmd160  c0e83afbc87100eb1f6a7e6ebf1c06adc2c6db22 \
                    sha256  99bbfe3af1d8fe2326aca522626411132bf3ddf026fccefb2b01a4340dac4a2a \
                    size    110105407

depends_lib         port:freetype \
                    port:libiconv \
                    port:libffi
depends_build       port:autoconf \
                    port:gmake \
                    port:bash \
                    port:openjdk8-bootstrap

pre-patch {
    reinplace "s|libffi.so.?|libffi.?.dylib|g" ${worksrcpath}/common/autoconf/lib-ffi.m4
    reinplace "s|xmacosx|xwindows|g" ${worksrcpath}/common/autoconf/lib-freetype.m4
}

set tpath ${prefix}/Library/Java
use_configure    yes
configure.cmd       ${prefix}/bin/bash configure
configure.pre_args  --prefix=${tpath}
set bug_url "https://trac.macports.org/newticket?port=${name}"
# default configure args
configure.args      --with-debug-level=release \
                    --with-native-debug-symbols=none \
                    --with-version-string=${version}+${build} \
                    --with-sysroot=`xcrun --sdk macosx --show-sdk-path` \
                    --with-extra-cflags="${configure.cflags}" \
                    --with-extra-cxxflags="${configure.cxxflags}" \
                    --with-extra-ldflags="${configure.ldflags}" \
                    --with-boot-jdk=/Library/Java/JavaVirtualMachines/openjdk8-bootstrap/Contents/Home \
                    --with-freetype=system \
                    --with-freetype-include=${prefix}/include/freetype2 \
                    --with-freetype-lib=${prefix}/lib \
                    --disable-warnings-as-errors \
                    --disable-precompiled-headers \
                    --with-conf-name=openjdk9-bootstrap \
                    --with-jvm-variants=zero \
                    --with-libffi=${prefix} \
                    --enable-libffi-bundling

if {[option configure.ccache]} {
    # replace MacPorts ccache integration into JDK
    configure.ccache        no
    depends_build-append    path:bin/ccache:ccache
    configure.args-append   --enable-ccache \
                            --with-ccache-dir=${ccache_dir}
}

build.type          gnu
build.target        images
use_parallel_build  no
set jdkn jdk-${version}.jdk
set bundle_dir build/openjdk9-bootstrap/images/jdk-bundle/${jdkn}/Contents

test.run            yes
test.cmd            ${bundle_dir}/Home/bin/java
test.target         --version

set pathb ${tpath}/JavaVirtualMachines/${name}
set jvms /Library/Java/JavaVirtualMachines
set jdk ${jvms}/${name}
destroot {
    xinstall -m 755 -d ${destroot}${pathb}
    copy ${worksrcpath}/${bundle_dir} ${destroot}${pathb}

    # macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, so let's create a symlink there
    xinstall -m 755 -d ${destroot}${jvms}
    ln -s ${pathb} ${destroot}${jdk}
}
# macOS Java tools expect to find Java virtual machines under /Library/Java/JavaVirtualMachines, which is not under ${prefix}.
destroot.violate_mtree      yes

post-destroot {
    delete ${worksrcpath}
}
